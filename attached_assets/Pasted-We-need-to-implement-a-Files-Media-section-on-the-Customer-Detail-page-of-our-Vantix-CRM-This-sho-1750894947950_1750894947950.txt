We need to implement a Files & Media section on the Customer Detail page of our Vantix CRM. This should allow us to upload, store, and view files (especially photos or PDFs) related to each customer. 🔧 Backend Requirements — 1. Database Schema Update: Create a new table or collection called CustomerFiles with the following fields: id (UUID or auto-increment), customer_id (foreign key to the customer table), file_name, file_url (cloud or local path), file_type (e.g., ‘image/png’, ‘application/pdf’), uploaded_by, uploaded_at. 2. API Endpoints: POST /api/customers/:id/files — Upload a new file for a customer. GET /api/customers/:id/files — Retrieve all files for a customer. DELETE /api/files/:fileId — Optional: Remove a specific file. 3. File Storage: Store locally under /uploads/ OR integrate basic cloud storage (e.g., AWS S3, Supabase Storage, Firebase Storage — use your preferred option). Protect routes to only allow valid users to upload/delete. 🖼️ Frontend Requirements — 1. Files & Media Card (Customer Detail Page): Display a list/grid of uploaded files (thumbnails for images, file icon + name for others). Include “Upload File” button with drag-and-drop and click-to-upload support. Show upload progress bar if possible. Fallback message when no files exist: “You’ll be able to upload files and photos here in a future update.” 2. Upload Form: Use a modal or inline file input for new uploads. Accept only: Images (jpg, png, gif) and Documents (pdf, optionally Word/Excel). Limit file size to 10 MB per file. Store uploaded file with the correct customer_id. 3. Optional Enhancements: Preview image thumbnails. Delete icon (with confirmation). Show file size and upload date. 🧑‍💻 Stack Notes — We’re using: Frontend: React + TailwindCSS. Backend: Express / Node / Supabase / Firebase / Prisma (adjust as needed). Auth: If needed, use existing auth to validate uploaders. Let me know once that’s live and I’ll help you extend the logic for attaching those files to tickets, agreements, or onboarding workflows.